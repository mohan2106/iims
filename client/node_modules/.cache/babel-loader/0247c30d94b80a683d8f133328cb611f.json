{"ast":null,"code":"var _jsxFileName = \"/home/bhasker/Programming/Web Development/IIMS/client/src/components/AskQuery/AskQuery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from \"./AskQuery.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValidationMessage(props) {\n  if (!props.valid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.error_msg,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n}\n\n_c = ValidationMessage;\n\nconst BookTrial = props => {\n  _s();\n\n  const kidlogo = process.env.PUBLIC_URL + \"/images/query.svg\";\n  const [username, setusername] = useState(\"\");\n  const [usernameValid, setUsernameValid] = useState(false);\n  const [category, setCategory] = useState(\"\");\n  const [categoryValid, setCategoryValid] = useState(false);\n  const [query, setQuery] = useState(\"\");\n  const [queryValid, setQueryValid] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const validateForm = () => {\n    setFormValid(usernameValid && categoryValid && queryValid);\n  };\n\n  const updateUsername = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setusername(data);\n\n    if (data.length > 0) {\n      setUsernameValid(true);\n    } else {\n      setUsernameValid(false);\n      errorMsg.username = \"Name is required!\";\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updateCategory = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setCategory(data);\n\n    if (data.length > 0) {\n      setCategoryValid(true);\n    } else {\n      setCategoryValid(false);\n      errorMsg.category = \"Category is required\";\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updateQuery = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setQuery(data);\n\n    if (data.length > 0) {\n      setQueryValid(true);\n    } else {\n      setQueryValid(false);\n      errorMsg.query = \"Query is required\";\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.main,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      style: {\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/images/CurveBackground.svg\"})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.item1,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ask Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Do you have any question regarding any Events or anything to ask from the Event Manager?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: kidlogo,\n          alt: \"creative\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.item2,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"#\",\n          id: \"js-form\",\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.form_group,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: classes.label,\n              htmlFor: \"username\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n              valid: usernameValid,\n              message: errorMessage.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              className: classes.form_field,\n              value: username,\n              onChange: e => updateUsername(e.target.value),\n              placeholder: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.form_group,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: classes.label,\n              htmlFor: \"category\",\n              children: \"Query Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n              valid: categoryValid,\n              message: errorMessage.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              id: \"category\",\n              name: \"category\",\n              className: classes.form_field,\n              value: category,\n              onChange: e => updateCategory(e.target.value),\n              placeholder: \"Query Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.form_group,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: classes.label,\n              htmlFor: \"query\",\n              children: \"Query\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n              valid: queryValid,\n              message: errorMessage.query\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              id: \"query\",\n              name: \"query\",\n              className: classes.form_text_field,\n              value: query,\n              onChange: e => updateQuery(e.target.value),\n              rows: \"5\",\n              column: \"10\",\n              placeholder: \"Enter your query here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.btn,\n              type: \"submit\",\n              disabled: !formValid,\n              children: \"Ask Query\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookTrial, \"Sb/BKqfWfBAmlmcGUznvLmR0WV0=\");\n\n_c2 = BookTrial;\nexport default BookTrial;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValidationMessage\");\n$RefreshReg$(_c2, \"BookTrial\");","map":{"version":3,"sources":["/home/bhasker/Programming/Web Development/IIMS/client/src/components/AskQuery/AskQuery.js"],"names":["React","useState","classes","ValidationMessage","props","valid","error_msg","message","BookTrial","kidlogo","process","env","PUBLIC_URL","username","setusername","usernameValid","setUsernameValid","category","setCategory","categoryValid","setCategoryValid","query","setQuery","queryValid","setQueryValid","formValid","setFormValid","errorMessage","setErrorMessage","validateForm","updateUsername","data","errorMsg","length","updateCategory","updateQuery","main","container","backgroundImage","item1","item2","form","form_group","label","form_field","e","target","value","form_text_field","btn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./AskQuery.module.css\";\n\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n        return (\n            <div className={classes.error_msg}>\n                <p>{props.message}</p>\n            </div>\n        );\n    }\n    return null;\n}\n\nconst BookTrial = (props) => {\n    const kidlogo = process.env.PUBLIC_URL + \"/images/query.svg\";\n    const [username, setusername] = useState(\"\");\n    const [usernameValid, setUsernameValid] = useState(false);\n    const [category, setCategory] = useState(\"\");\n    const [categoryValid, setCategoryValid] = useState(false);\n    const [query, setQuery] = useState(\"\");\n    const [queryValid, setQueryValid] = useState(false);\n    const [formValid, setFormValid] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({});\n\n    const validateForm = () => {\n        setFormValid(usernameValid && categoryValid && queryValid);\n    };\n    const updateUsername = (data) => {\n        let errorMsg = { ...errorMessage };\n        setusername(data);\n        if (data.length > 0) {\n            setUsernameValid(true);\n        } else {\n            setUsernameValid(false);\n            errorMsg.username = \"Name is required!\";\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    };\n\n    const updateCategory = (data) => {\n        let errorMsg = { ...errorMessage };\n        setCategory(data);\n        if (data.length > 0) {\n            setCategoryValid(true);\n        } else {\n            setCategoryValid(false);\n            errorMsg.category = \"Category is required\";\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    };\n\n    const updateQuery = (data) => {\n        let errorMsg = { ...errorMessage };\n        setQuery(data);\n        if (data.length > 0) {\n            setQueryValid(true);\n        } else {\n            setQueryValid(false);\n            errorMsg.query = \"Query is required\";\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    };\n\n    return (\n        <div className={classes.main}>\n            <div\n                className={classes.container}\n                style={{\n                    backgroundImage: `url(${\n                        process.env.PUBLIC_URL + \"/images/CurveBackground.svg\"\n                    })`,\n                }}\n            >\n                <div className={classes.item1}>\n                    <h2>Ask Query</h2>\n                    <p>\n                        Do you have any question regarding any Events or\n                        anything to ask from the Event Manager?\n                    </p>\n                    <img src={kidlogo} alt=\"creative\"></img>\n                </div>\n                <div className={classes.item2}>\n                    <form action=\"#\" id=\"js-form\" className={classes.form}>\n                        {/* <div className={classes.form_group}>\n                            <label className={classes.label} htmlFor=\"username\">\n                                Username\n                            </label>\n                            \n                        </div> */}\n                        <div className={classes.form_group}>\n                            <label className={classes.label} htmlFor=\"username\">\n                                Username\n                            </label>\n                            <ValidationMessage\n                                valid={usernameValid}\n                                message={errorMessage.username}\n                            />\n                            <textarea\n                                type=\"text\"\n                                id=\"username\"\n                                name=\"username\"\n                                className={classes.form_field}\n                                value={username}\n                                onChange={(e) => updateUsername(e.target.value)}\n                                placeholder=\"Username\"\n                            />\n                        </div>\n                        <div className={classes.form_group}>\n                            <label className={classes.label} htmlFor=\"category\">\n                                Query Category\n                            </label>\n                            <ValidationMessage\n                                valid={categoryValid}\n                                message={errorMessage.category}\n                            />\n                            <textarea\n                                type=\"text\"\n                                id=\"category\"\n                                name=\"category\"\n                                className={classes.form_field}\n                                value={category}\n                                onChange={(e) => updateCategory(e.target.value)}\n                                placeholder=\"Query Category\"\n                            />\n                        </div>\n                        <div className={classes.form_group}>\n                            <label className={classes.label} htmlFor=\"query\">\n                                Query\n                            </label>\n                            <ValidationMessage\n                                valid={queryValid}\n                                message={errorMessage.query}\n                            />\n                            <textarea\n                                type=\"text\"\n                                id=\"query\"\n                                name=\"query\"\n                                className={classes.form_text_field}\n                                value={query}\n                                onChange={(e) => updateQuery(e.target.value)}\n                                rows=\"5\"\n                                column=\"10\"\n                                placeholder=\"Enter your query here\"\n                            />\n                        </div>\n                        <div className=\"form-controls\">\n                            <button\n                                className={classes.btn}\n                                type=\"submit\"\n                                disabled={!formValid}\n                            >\n                                Ask Query\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default BookTrial;\n"]},"metadata":{},"sourceType":"module"}