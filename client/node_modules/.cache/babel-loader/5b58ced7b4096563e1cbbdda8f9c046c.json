{"ast":null,"code":"var _jsxFileName = \"/home/bhasker/Programming/Web Development/IIMS/src/components/AskQuery/AskQuery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './AskQuery.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValidationMessage(props) {\n  if (!props.valid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.error_msg,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this);\n  }\n\n  return null;\n}\n\n_c = ValidationMessage;\n\nconst BookTrial = props => {\n  _s();\n\n  const kidlogo = process.env.PUBLIC_URL + '/images/query.svg';\n  const [name, setname] = useState('');\n  const [nameValid, setNameValid] = useState(false);\n  const [email, setemail] = useState('');\n  const [emailValid, setEmailValid] = useState(false);\n  const [standard, setstandard] = useState('');\n  const [standardValid, setStandardValid] = useState(false);\n  const [phone, setphone] = useState('');\n  const [phoneValid, setPhoneValid] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const validateForm = () => {\n    setFormValid(nameValid && emailValid && standardValid && phoneValid);\n  };\n\n  const updateName = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setname(data);\n\n    if (data.length > 0) {\n      setNameValid(true);\n    } else {\n      setNameValid(false);\n      errorMsg.name = 'Name is required!';\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updateEmail = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setemail(data);\n\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      setEmailValid(false);\n      errorMsg.email = 'Invalid email format';\n      setErrorMessage(errorMsg);\n    } else {\n      setEmailValid(true);\n    }\n\n    validateForm();\n  };\n\n  const updateStandard = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setstandard(data);\n\n    if (data.length > 0) {\n      setStandardValid(true);\n    } else {\n      setStandardValid(false);\n      errorMsg.standard = 'Class is required!';\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updatePhone = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setphone(data);\n\n    if (data.length === 10) {\n      setPhoneValid(true);\n    } else {\n      setPhoneValid(false);\n      errorMsg.phone = '10 digit phone number is required';\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.main,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      style: {\n        backgroundImage: `url(${process.env.PUBLIC_URL + '/images/CurveBackground.svg'})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.item1,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ask Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Do you have any question regarding any Events or anything to ask from the Event Manager?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: kidlogo,\n          alt: \"creative\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.item2,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"#\",\n          id: \"js-form\",\n          className: classes.form,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.form_group,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: classes.label,\n              htmlFor: \"username\",\n              children: \"Query\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n              valid: nameValid,\n              message: errorMessage.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              id: \"username\",\n              name: \"username\",\n              className: classes.form_field,\n              value: name,\n              onChange: e => updateName(e.target.value),\n              rows: \"5\",\n              column: \"10\",\n              placeholder: \"Enter your query here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.btn,\n              type: \"submit\",\n              disabled: !formValid,\n              children: \"Ask Query\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookTrial, \"k+Uhqdcm9gR4/2ODna2m0E2WSiE=\");\n\n_c2 = BookTrial;\nexport default BookTrial;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValidationMessage\");\n$RefreshReg$(_c2, \"BookTrial\");","map":{"version":3,"sources":["/home/bhasker/Programming/Web Development/IIMS/src/components/AskQuery/AskQuery.js"],"names":["React","useState","classes","ValidationMessage","props","valid","error_msg","message","BookTrial","kidlogo","process","env","PUBLIC_URL","name","setname","nameValid","setNameValid","email","setemail","emailValid","setEmailValid","standard","setstandard","standardValid","setStandardValid","phone","setphone","phoneValid","setPhoneValid","formValid","setFormValid","errorMessage","setErrorMessage","validateForm","updateName","data","errorMsg","length","updateEmail","test","updateStandard","updatePhone","main","container","backgroundImage","item1","item2","form","form_group","label","form_field","e","target","value","btn"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport classes from './AskQuery.module.css';\n\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n      return(\n        <div className={classes.error_msg}>\n            <p>{props.message}</p>\n        </div>\n      )\n    }\n    return null;\n  }\n\nconst BookTrial = (props) => {\n    const kidlogo = process.env.PUBLIC_URL + '/images/query.svg';\n    const [name,setname] = useState('');\n    const [nameValid,setNameValid] = useState(false);\n    const [email,setemail] = useState('');\n    const [emailValid,setEmailValid] = useState(false);\n    const [standard,setstandard] = useState('');\n    const [standardValid,setStandardValid] = useState(false);\n    const [phone,setphone] = useState('');\n    const [phoneValid,setPhoneValid] = useState(false);\n    const [formValid,setFormValid] = useState(false);\n    const [errorMessage,setErrorMessage] = useState({});\n\n    const validateForm = ()=>{\n        setFormValid(nameValid && emailValid && standardValid && phoneValid);\n    }\n    const updateName = (data) => {\n        let errorMsg = {...errorMessage};\n        setname(data);\n        if(data.length > 0){\n            setNameValid(true);\n        }else{\n            setNameValid(false);\n            errorMsg.name = 'Name is required!';\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    }\n\n    const updateEmail = (data) => {\n        let errorMsg = {...errorMessage};\n        setemail(data);\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)){\n            setEmailValid(false);\n            errorMsg.email = 'Invalid email format';\n            setErrorMessage(errorMsg);\n        }else{\n            setEmailValid(true);\n        }\n        validateForm();\n    }\n\n    const updateStandard = (data) => {\n        let errorMsg = {...errorMessage};\n        setstandard(data);\n        if(data.length > 0){\n            setStandardValid(true);\n        }else{\n            setStandardValid(false);\n            errorMsg.standard = 'Class is required!';\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    }\n\n    const updatePhone = (data) => {\n        let errorMsg = {...errorMessage};\n        setphone(data);\n        if(data.length === 10){\n            setPhoneValid(true);\n        }else{\n            setPhoneValid(false);\n            errorMsg.phone = '10 digit phone number is required';\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    }\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.container} style={{backgroundImage: `url(${process.env.PUBLIC_URL + '/images/CurveBackground.svg'})`}}>\n                <div className={classes.item1}>\n                    <h2>Ask Query</h2>\n                    <p>Do you have any question regarding any Events or anything to ask from the Event Manager?</p>\n                    <img src={kidlogo} alt='creative'></img>\n                </div>\n                <div className={classes.item2}>\n                    <form action='#' id='js-form' className={classes.form}>\n                        <div className={classes.form_group}>\n                            <label className={classes.label} htmlFor='username'>Query</label>\n                            < ValidationMessage valid={nameValid} message={errorMessage.name} />\n                            <textarea type='text' id='username' name='username' className={classes.form_field}\n                            value={name} onChange={(e) => updateName(e.target.value)} rows=\"5\" column=\"10\" placeholder='Enter your query here'/>\n                        </div>\n                        {/* <div className={classes.form_group}>\n                            <label className={classes.label} htmlFor='email'>Email</label>\n                            < ValidationMessage valid={emailValid} message={errorMessage.email} />\n                            <input type='email' id='email' name='email' className={classes.form_field}\n                            value={email} onChange={(e) => updateEmail(e.target.value)} placeholder='Enter email'/>\n                        </div>\n                        <div className={classes.phoneclass}>\n                            <div className={classes.form_group1}>\n                                <label className={classes.label} htmlFor='phone'>Phone</label>\n                                < ValidationMessage valid={phoneValid} message={errorMessage.phone} />\n                                <input type='phone' id='phone' name='phone' className={classes.form_field} \n                                value={phone} onChange={(e) => updatePhone(e.target.value)} placeholder='Enter Phone Number'/>\n                            </div>\n                            <div className={classes.form_group2}>\n                                <label className={classes.label} htmlFor='standard'>Class</label>\n                                < ValidationMessage valid={standardValid} message={errorMessage.standard}/>\n                                <input type='text' id='standard' name='standard' className={classes.form_field}\n                                value={standard} onChange={(e) => updateStandard(e.target.value)} placeholder='class'/>\n                            </div>\n                        </div> */}\n                        <div className='form-controls'>\n                            <button className={classes.btn} type='submit' disabled={!formValid}>Ask Query</button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default BookTrial;\n"]},"metadata":{},"sourceType":"module"}