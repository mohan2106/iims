{"ast":null,"code":"var _jsxFileName = \"/home/bhasker/Programming/Web Development/IIMS/src/components/Authentication/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValidationMessage(props) {\n  if (!props.valid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.error_msg,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n}\n\n_c = ValidationMessage;\n\nconst SignUp = props => {\n  _s();\n\n  const [name, setname] = useState(\"\");\n  const [nameValid, setNameValid] = useState(false);\n  const [email, setemail] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(false);\n  const [standard, setstandard] = useState(\"\");\n  const [standardValid, setStandardValid] = useState(false);\n  const [phone, setphone] = useState(\"\");\n  const [phoneValid, setPhoneValid] = useState(false);\n  const [password, setpassword] = useState(\"\");\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [cnfpassword, setcnfpassword] = useState(\"\");\n  const [cnfpasswordValid, setCnfPasswordValid] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const validateForm = () => {\n    setFormValid(nameValid && emailValid && standardValid && phoneValid && passwordValid && cnfpasswordValid);\n  };\n\n  const updateName = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setname(data);\n\n    if (data.length > 0) {\n      setNameValid(true);\n    } else {\n      setNameValid(false);\n      errorMsg.name = \"Name is required!\";\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updateEmail = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setemail(data);\n\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      setEmailValid(false);\n      errorMsg.email = \"Invalid email format\";\n      setErrorMessage(errorMsg);\n    } else {\n      setEmailValid(true);\n    }\n\n    validateForm();\n  };\n\n  const updateStandard = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setstandard(data);\n\n    if (data.length > 0) {\n      setStandardValid(true);\n    } else {\n      setStandardValid(false);\n      errorMsg.standard = \"Class is required!\";\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updatePhone = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setphone(data);\n\n    if (data.length === 10) {\n      setPhoneValid(true);\n    } else {\n      setPhoneValid(false);\n      errorMsg.phone = \"10 digit phone number is required\";\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updatePassword = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setpassword(data);\n\n    if (data.length === 0) {\n      setPasswordValid(false);\n      errorMsg.password = \"Password is required\";\n    } else if (data.length < 6) {\n      setPasswordValid(false);\n      errorMsg.password = \"Password needs to be 6 characters or more\";\n    } else {\n      setPasswordValid(true);\n\n      if (cnfpassword === password) {\n        setCnfPasswordValid(true);\n      }\n    }\n\n    setErrorMessage(errorMsg);\n  };\n\n  const updateCnfPassword = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setcnfpassword(data);\n\n    if (data.length === 0) {\n      setCnfPasswordValid(false);\n      errorMsg.cnfpassword = \"Confirm Password is required\";\n    } else if (data !== password) {\n      setCnfPasswordValid(false);\n      errorMsg.cnfpassword = \"Password Mismatch\";\n    } else {\n      setCnfPasswordValid(true);\n    }\n\n    setErrorMessage(errorMsg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.heading,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Register as a participant to participate in Inter-IIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      id: \"js-form\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"username\",\n          children: \"Participant Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: nameValid,\n          message: errorMessage.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          className: classes.form_field,\n          value: name,\n          onChange: e => updateName(e.target.value),\n          placeholder: \"Enter participant name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: emailValid,\n          message: errorMessage.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          className: classes.form_field,\n          value: email,\n          onChange: e => updateEmail(e.target.value),\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"CollageName\",\n          children: \"Collage Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: nameValid,\n          message: errorMessage.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"CollageName\",\n          name: \"CollageName\",\n          className: classes.form_field,\n          value: name,\n          onChange: e => updateName(e.target.value),\n          placeholder: \"Enter student name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.phoneclass,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.form_group1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.label,\n            htmlFor: \"phone\",\n            children: \"Roll Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n            valid: phoneValid,\n            message: errorMessage.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"phone\",\n            id: \"phone\",\n            name: \"phone\",\n            className: classes.form_field,\n            value: phone,\n            onChange: e => updatePhone(e.target.value),\n            placeholder: \"Enter Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.form_group2,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.label,\n            htmlFor: \"standard\",\n            children: \"year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n            valid: standardValid,\n            message: errorMessage.standard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"standard\",\n            name: \"standard\",\n            className: classes.form_field,\n            value: standard,\n            onChange: e => updateStandard(e.target.value),\n            placeholder: \"class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: passwordValid,\n          message: errorMessage.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          className: classes.form_field,\n          value: password,\n          onChange: e => updatePassword(e.target.value),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: cnfpasswordValid,\n          message: errorMessage.cnfpassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_password\",\n          name: \"cnfpassword\",\n          className: classes.form_field,\n          value: cnfpassword,\n          onChange: e => updateCnfPassword(e.target.value),\n          placeholder: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.btn,\n          type: \"submit\",\n          disabled: !formValid,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"Wy+EGH5wlhZjj/YxQki3cFIoy+8=\");\n\n_c2 = SignUp;\nexport default SignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValidationMessage\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["/home/bhasker/Programming/Web Development/IIMS/src/components/Authentication/Signup.js"],"names":["React","useState","classes","ValidationMessage","props","valid","error_msg","message","SignUp","name","setname","nameValid","setNameValid","email","setemail","emailValid","setEmailValid","standard","setstandard","standardValid","setStandardValid","phone","setphone","phoneValid","setPhoneValid","password","setpassword","passwordValid","setPasswordValid","cnfpassword","setcnfpassword","cnfpasswordValid","setCnfPasswordValid","formValid","setFormValid","errorMessage","setErrorMessage","validateForm","updateName","data","errorMsg","length","updateEmail","test","updateStandard","updatePhone","updatePassword","updateCnfPassword","container","heading","form","form_group","label","form_field","e","target","value","phoneclass","form_group1","form_group2","btn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./Login.module.css\";\n\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n        return (\n            <div className={classes.error_msg}>\n                <p>{props.message}</p>\n            </div>\n        );\n    }\n    return null;\n}\n\nconst SignUp = (props) => {\n    const [name, setname] = useState(\"\");\n    const [nameValid, setNameValid] = useState(false);\n    const [email, setemail] = useState(\"\");\n    const [emailValid, setEmailValid] = useState(false);\n    const [standard, setstandard] = useState(\"\");\n    const [standardValid, setStandardValid] = useState(false);\n    const [phone, setphone] = useState(\"\");\n    const [phoneValid, setPhoneValid] = useState(false);\n    const [password, setpassword] = useState(\"\");\n    const [passwordValid, setPasswordValid] = useState(false);\n    const [cnfpassword, setcnfpassword] = useState(\"\");\n    const [cnfpasswordValid, setCnfPasswordValid] = useState(false);\n    const [formValid, setFormValid] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({});\n\n    const validateForm = () => {\n        setFormValid(\n            nameValid &&\n                emailValid &&\n                standardValid &&\n                phoneValid &&\n                passwordValid &&\n                cnfpasswordValid\n        );\n    };\n    const updateName = (data) => {\n        let errorMsg = { ...errorMessage };\n        setname(data);\n        if (data.length > 0) {\n            setNameValid(true);\n        } else {\n            setNameValid(false);\n            errorMsg.name = \"Name is required!\";\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    };\n\n    const updateEmail = (data) => {\n        let errorMsg = { ...errorMessage };\n        setemail(data);\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n            setEmailValid(false);\n            errorMsg.email = \"Invalid email format\";\n            setErrorMessage(errorMsg);\n        } else {\n            setEmailValid(true);\n        }\n        validateForm();\n    };\n\n    const updateStandard = (data) => {\n        let errorMsg = { ...errorMessage };\n        setstandard(data);\n        if (data.length > 0) {\n            setStandardValid(true);\n        } else {\n            setStandardValid(false);\n            errorMsg.standard = \"Class is required!\";\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    };\n\n    const updatePhone = (data) => {\n        let errorMsg = { ...errorMessage };\n        setphone(data);\n        if (data.length === 10) {\n            setPhoneValid(true);\n        } else {\n            setPhoneValid(false);\n            errorMsg.phone = \"10 digit phone number is required\";\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    };\n\n    const updatePassword = (data) => {\n        let errorMsg = { ...errorMessage };\n        setpassword(data);\n        if (data.length === 0) {\n            setPasswordValid(false);\n            errorMsg.password = \"Password is required\";\n        } else if (data.length < 6) {\n            setPasswordValid(false);\n            errorMsg.password = \"Password needs to be 6 characters or more\";\n        } else {\n            setPasswordValid(true);\n            if (cnfpassword === password) {\n                setCnfPasswordValid(true);\n            }\n        }\n        setErrorMessage(errorMsg);\n    };\n    const updateCnfPassword = (data) => {\n        let errorMsg = { ...errorMessage };\n        setcnfpassword(data);\n        if (data.length === 0) {\n            setCnfPasswordValid(false);\n            errorMsg.cnfpassword = \"Confirm Password is required\";\n        } else if (data !== password) {\n            setCnfPasswordValid(false);\n            errorMsg.cnfpassword = \"Password Mismatch\";\n        } else {\n            setCnfPasswordValid(true);\n        }\n        setErrorMessage(errorMsg);\n    };\n    return (\n        <div className={classes.container}>\n            <div className={classes.heading}>\n                <h2>Sign Up</h2>\n                <h4>Register as a participant to participate in Inter-IIT</h4>\n            </div>\n            <form action=\"#\" id=\"js-form\" className={classes.form}>\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"username\">\n                        Participant Name\n                    </label>\n                    <ValidationMessage\n                        valid={nameValid}\n                        message={errorMessage.name}\n                    />\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        name=\"username\"\n                        className={classes.form_field}\n                        value={name}\n                        onChange={(e) => updateName(e.target.value)}\n                        placeholder=\"Enter participant name\"\n                    />\n                </div>\n\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"email\">\n                        Email\n                    </label>\n                    <ValidationMessage\n                        valid={emailValid}\n                        message={errorMessage.email}\n                    />\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        className={classes.form_field}\n                        value={email}\n                        onChange={(e) => updateEmail(e.target.value)}\n                        placeholder=\"Enter email\"\n                    />\n                </div>\n\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"CollageName\">\n                        Collage Name\n                    </label>\n                    <ValidationMessage\n                        valid={nameValid}\n                        message={errorMessage.name}\n                    />\n                    <input\n                        type=\"text\"\n                        id=\"CollageName\"\n                        name=\"CollageName\"\n                        className={classes.form_field}\n                        value={name}\n                        onChange={(e) => updateName(e.target.value)}\n                        placeholder=\"Enter student name\"\n                    />\n                </div>\n\n                <div className={classes.phoneclass}>\n                    <div className={classes.form_group1}>\n                        <label className={classes.label} htmlFor=\"phone\">\n                            Roll Number\n                        </label>\n                        <ValidationMessage\n                            valid={phoneValid}\n                            message={errorMessage.phone}\n                        />\n                        <input\n                            type=\"phone\"\n                            id=\"phone\"\n                            name=\"phone\"\n                            className={classes.form_field}\n                            value={phone}\n                            onChange={(e) => updatePhone(e.target.value)}\n                            placeholder=\"Enter Phone Number\"\n                        />\n                    </div>\n                    <div className={classes.form_group2}>\n                        <label className={classes.label} htmlFor=\"standard\">\n                            year\n                        </label>\n                        <ValidationMessage\n                            valid={standardValid}\n                            message={errorMessage.standard}\n                        />\n                        <input\n                            type=\"text\"\n                            id=\"standard\"\n                            name=\"standard\"\n                            className={classes.form_field}\n                            value={standard}\n                            onChange={(e) => updateStandard(e.target.value)}\n                            placeholder=\"class\"\n                        />\n                    </div>\n                </div>\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"password\">\n                        Password\n                    </label>\n                    <ValidationMessage\n                        valid={passwordValid}\n                        message={errorMessage.password}\n                    />\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        className={classes.form_field}\n                        value={password}\n                        onChange={(e) => updatePassword(e.target.value)}\n                        placeholder=\"Password\"\n                    />\n                </div>\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"password\">\n                        Confirm Password\n                    </label>\n                    <ValidationMessage\n                        valid={cnfpasswordValid}\n                        message={errorMessage.cnfpassword}\n                    />\n                    <input\n                        type=\"password\"\n                        id=\"confirm_password\"\n                        name=\"cnfpassword\"\n                        className={classes.form_field}\n                        value={cnfpassword}\n                        onChange={(e) => updateCnfPassword(e.target.value)}\n                        placeholder=\"Confirm Password\"\n                    />\n                </div>\n                <div className=\"form-controls\">\n                    <button\n                        className={classes.btn}\n                        type=\"submit\"\n                        disabled={!formValid}\n                    >\n                        Register\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}