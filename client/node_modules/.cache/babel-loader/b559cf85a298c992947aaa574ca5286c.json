{"ast":null,"code":"var _jsxFileName = \"/home/bhasker/Programming/Web Development/IIMS/client/src/components/AskQuery/AskQuery.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from \"./AskQuery.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValidationMessage(props) {\n  if (!props.valid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.error_msg,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n}\n\n_c = ValidationMessage;\n\nconst BookTrial = props => {\n  _s();\n\n  const kidlogo = process.env.PUBLIC_URL + \"/images/query.svg\";\n  const [username, setusername] = useState(\"\");\n  const [usernameValid, setUsernameValid] = useState(false);\n  const [standard, setstandard] = useState(\"\");\n  const [standardValid, setStandardValid] = useState(false);\n  const [phone, setphone] = useState(\"\");\n  const [phoneValid, setPhoneValid] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const validateForm = () => {\n    setFormValid(usernameValid && emailValid && standardValid && phoneValid);\n  };\n\n  const updateName = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setusername(data);\n\n    if (data.length > 0) {\n      setUsernameValid(true);\n    } else {\n      setUsernameValid(false);\n      errorMsg.name = \"Name is required!\";\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updateEmail = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setemail(data);\n\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      setEmailValid(false);\n      errorMsg.email = \"Invalid email format\";\n      setErrorMessage(errorMsg);\n    } else {\n      setEmailValid(true);\n    }\n\n    validateForm();\n  };\n\n  const updateStandard = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setstandard(data);\n\n    if (data.length > 0) {\n      setStandardValid(true);\n    } else {\n      setStandardValid(false);\n      errorMsg.standard = \"Class is required!\";\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updatePhone = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setphone(data);\n\n    if (data.length === 10) {\n      setPhoneValid(true);\n    } else {\n      setPhoneValid(false);\n      errorMsg.phone = \"10 digit phone number is required\";\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.main,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      style: {\n        backgroundImage: `url(${process.env.PUBLIC_URL + \"/images/CurveBackground.svg\"})`\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.item1,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Ask Query\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Do you have any question regarding any Events or anything to ask from the Event Manager?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: kidlogo,\n          alt: \"creative\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.item2,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"#\",\n          id: \"js-form\",\n          className: classes.form,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-controls\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: classes.btn,\n              type: \"submit\",\n              disabled: !formValid,\n              children: \"Ask Query\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookTrial, \"4jB3zbCutAlzisOa/Fkig7tmKAQ=\");\n\n_c2 = BookTrial;\nexport default BookTrial;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValidationMessage\");\n$RefreshReg$(_c2, \"BookTrial\");","map":{"version":3,"sources":["/home/bhasker/Programming/Web Development/IIMS/client/src/components/AskQuery/AskQuery.js"],"names":["React","useState","classes","ValidationMessage","props","valid","error_msg","message","BookTrial","kidlogo","process","env","PUBLIC_URL","username","setusername","usernameValid","setUsernameValid","standard","setstandard","standardValid","setStandardValid","phone","setphone","phoneValid","setPhoneValid","formValid","setFormValid","errorMessage","setErrorMessage","validateForm","emailValid","updateName","data","errorMsg","length","name","updateEmail","setemail","test","email","setEmailValid","updateStandard","updatePhone","main","container","backgroundImage","item1","item2","form","btn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./AskQuery.module.css\";\n\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n        return (\n            <div className={classes.error_msg}>\n                <p>{props.message}</p>\n            </div>\n        );\n    }\n    return null;\n}\n\nconst BookTrial = (props) => {\n    const kidlogo = process.env.PUBLIC_URL + \"/images/query.svg\";\n    const [username, setusername] = useState(\"\");\n    const [usernameValid, setUsernameValid] = useState(false);\n    const [standard, setstandard] = useState(\"\");\n    const [standardValid, setStandardValid] = useState(false);\n    const [phone, setphone] = useState(\"\");\n    const [phoneValid, setPhoneValid] = useState(false);\n    const [formValid, setFormValid] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({});\n\n    const validateForm = () => {\n        setFormValid(usernameValid && emailValid && standardValid && phoneValid);\n    };\n    const updateName = (data) => {\n        let errorMsg = { ...errorMessage };\n        setusername(data);\n        if (data.length > 0) {\n            setUsernameValid(true);\n        } else {\n            setUsernameValid(false);\n            errorMsg.name = \"Name is required!\";\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    };\n\n    const updateEmail = (data) => {\n        let errorMsg = { ...errorMessage };\n        setemail(data);\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n            setEmailValid(false);\n            errorMsg.email = \"Invalid email format\";\n            setErrorMessage(errorMsg);\n        } else {\n            setEmailValid(true);\n        }\n        validateForm();\n    };\n\n    const updateStandard = (data) => {\n        let errorMsg = { ...errorMessage };\n        setstandard(data);\n        if (data.length > 0) {\n            setStandardValid(true);\n        } else {\n            setStandardValid(false);\n            errorMsg.standard = \"Class is required!\";\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    };\n\n    const updatePhone = (data) => {\n        let errorMsg = { ...errorMessage };\n        setphone(data);\n        if (data.length === 10) {\n            setPhoneValid(true);\n        } else {\n            setPhoneValid(false);\n            errorMsg.phone = \"10 digit phone number is required\";\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    };\n\n    return (\n        <div className={classes.main}>\n            <div\n                className={classes.container}\n                style={{\n                    backgroundImage: `url(${\n                        process.env.PUBLIC_URL + \"/images/CurveBackground.svg\"\n                    })`,\n                }}\n            >\n                <div className={classes.item1}>\n                    <h2>Ask Query</h2>\n                    <p>\n                        Do you have any question regarding any Events or\n                        anything to ask from the Event Manager?\n                    </p>\n                    <img src={kidlogo} alt=\"creative\"></img>\n                </div>\n                <div className={classes.item2}>\n                    <form action=\"#\" id=\"js-form\" className={classes.form}>\n                        {/* <div className={classes.form_group}>\n                            <label className={classes.label} htmlFor=\"username\">\n                                Username\n                            </label>\n                            \n                        </div> */}\n                        {/* <div className={classes.form_group}>\n                            <label className={classes.label} htmlFor=\"username\">\n                                Query\n                            </label>\n                            <ValidationMessage\n                                valid={nameValid}\n                                message={errorMessage.name}\n                            />\n                            <textarea\n                                type=\"text\"\n                                id=\"username\"\n                                name=\"username\"\n                                className={classes.form_field}\n                                value={name}\n                                onChange={(e) => updateName(e.target.value)}\n                                rows=\"5\"\n                                column=\"10\"\n                                placeholder=\"Enter your query here\"\n                            />\n                        </div> */}\n                        {/* <div className={classes.form_group}>\n                            <label className={classes.label} htmlFor='email'>Email</label>\n                            < ValidationMessage valid={emailValid} message={errorMessage.email} />\n                            <input type='email' id='email' name='email' className={classes.form_field}\n                            value={email} onChange={(e) => updateEmail(e.target.value)} placeholder='Enter email'/>\n                        </div>\n                        <div className={classes.rollnoclass}>\n                            <div className={classes.form_group1}>\n                                <label className={classes.label} htmlFor='phone'>Phone</label>\n                                < ValidationMessage valid={phoneValid} message={errorMessage.phone} />\n                                <input type='phone' id='phone' name='phone' className={classes.form_field} \n                                value={phone} onChange={(e) => updatePhone(e.target.value)} placeholder='Enter Phone Number'/>\n                            </div>\n                            <div className={classes.form_group2}>\n                                <label className={classes.label} htmlFor='standard'>Class</label>\n                                < ValidationMessage valid={standardValid} message={errorMessage.standard}/>\n                                <input type='text' id='standard' name='standard' className={classes.form_field}\n                                value={standard} onChange={(e) => updateStandard(e.target.value)} placeholder='class'/>\n                            </div>\n                        </div> */}\n                        <div className=\"form-controls\">\n                            <button\n                                className={classes.btn}\n                                type=\"submit\"\n                                disabled={!formValid}\n                            >\n                                Ask Query\n                            </button>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    );\n};\nexport default BookTrial;\n"]},"metadata":{},"sourceType":"module"}