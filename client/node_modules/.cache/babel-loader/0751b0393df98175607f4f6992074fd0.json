{"ast":null,"code":"var _jsxFileName = \"/home/bhasker/Programming/Web Development/IIMS/src/components/Authentication/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValidationMessage(props) {\n  if (!props.valid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.error_msg,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this);\n  }\n\n  return null;\n}\n\n_c = ValidationMessage;\n\nconst SignUp = props => {\n  _s();\n\n  const [name, setname] = useState('');\n  const [nameValid, setNameValid] = useState(false);\n  const [email, setemail] = useState('');\n  const [emailValid, setEmailValid] = useState(false);\n  const [standard, setstandard] = useState('');\n  const [standardValid, setStandardValid] = useState(false);\n  const [phone, setphone] = useState('');\n  const [phoneValid, setPhoneValid] = useState(false);\n  const [password, setpassword] = useState('');\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [cnfpassword, setcnfpassword] = useState('');\n  const [cnfpasswordValid, setCnfPasswordValid] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const validateForm = () => {\n    setFormValid(nameValid && emailValid && standardValid && phoneValid && passwordValid && cnfpasswordValid);\n  };\n\n  const updateName = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setname(data);\n\n    if (data.length > 0) {\n      setNameValid(true);\n    } else {\n      setNameValid(false);\n      errorMsg.name = 'Name is required!';\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updateEmail = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setemail(data);\n\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      setEmailValid(false);\n      errorMsg.email = 'Invalid email format';\n      setErrorMessage(errorMsg);\n    } else {\n      setEmailValid(true);\n    }\n\n    validateForm();\n  };\n\n  const updateStandard = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setstandard(data);\n\n    if (data.length > 0) {\n      setStandardValid(true);\n    } else {\n      setStandardValid(false);\n      errorMsg.standard = 'Class is required!';\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updatePhone = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setphone(data);\n\n    if (data.length === 10) {\n      setPhoneValid(true);\n    } else {\n      setPhoneValid(false);\n      errorMsg.phone = '10 digit phone number is required';\n      setErrorMessage(errorMsg);\n    }\n\n    validateForm();\n  };\n\n  const updatePassword = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setpassword(data);\n\n    if (data.length === 0) {\n      setPasswordValid(false);\n      errorMsg.password = 'Password is required';\n    } else if (data.length < 6) {\n      setPasswordValid(false);\n      errorMsg.password = 'Password needs to be 6 characters or more';\n    } else {\n      setPasswordValid(true);\n\n      if (cnfpassword === password) {\n        setCnfPasswordValid(true);\n      }\n    }\n\n    setErrorMessage(errorMsg);\n  };\n\n  const updateCnfPassword = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setcnfpassword(data);\n\n    if (data.length === 0) {\n      setCnfPasswordValid(false);\n      errorMsg.cnfpassword = 'Confirm Password is required';\n    } else if (data !== password) {\n      setCnfPasswordValid(false);\n      errorMsg.cnfpassword = 'Password Mismatch';\n    } else {\n      setCnfPasswordValid(true);\n    }\n\n    setErrorMessage(errorMsg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.heading,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Register as a \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      id: \"js-form\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"username\",\n          children: \"Student Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: nameValid,\n          message: errorMessage.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          className: classes.form_field,\n          value: name,\n          onChange: e => updateName(e.target.value),\n          placeholder: \"Enter student name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: emailValid,\n          message: errorMessage.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          className: classes.form_field,\n          value: email,\n          onChange: e => updateEmail(e.target.value),\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"CollageName\",\n          children: \"Collage Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: nameValid,\n          message: errorMessage.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"CollageName\",\n          name: \"CollageName\",\n          className: classes.form_field,\n          value: name,\n          onChange: e => updateName(e.target.value),\n          placeholder: \"Enter student name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.phoneclass,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.form_group1,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.label,\n            htmlFor: \"phone\",\n            children: \"Roll Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n            valid: phoneValid,\n            message: errorMessage.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"phone\",\n            id: \"phone\",\n            name: \"phone\",\n            className: classes.form_field,\n            value: phone,\n            onChange: e => updatePhone(e.target.value),\n            placeholder: \"Enter Phone Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.form_group2,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: classes.label,\n            htmlFor: \"standard\",\n            children: \"year\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n            valid: standardValid,\n            message: errorMessage.standard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"standard\",\n            name: \"standard\",\n            className: classes.form_field,\n            value: standard,\n            onChange: e => updateStandard(e.target.value),\n            placeholder: \"class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: passwordValid,\n          message: errorMessage.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          className: classes.form_field,\n          value: password,\n          onChange: e => updatePassword(e.target.value),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: cnfpasswordValid,\n          message: errorMessage.cnfpassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_password\",\n          name: \"cnfpassword\",\n          className: classes.form_field,\n          value: cnfpassword,\n          onChange: e => updateCnfPassword(e.target.value),\n          placeholder: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.btn,\n          type: \"submit\",\n          disabled: !formValid,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"/xJadotNOwB9XVwy00ZMNBe65Bs=\");\n\n_c2 = SignUp;\nexport default SignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValidationMessage\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["/home/bhasker/Programming/Web Development/IIMS/src/components/Authentication/Signup.js"],"names":["React","useState","classes","ValidationMessage","props","valid","error_msg","message","SignUp","name","setname","nameValid","setNameValid","email","setemail","emailValid","setEmailValid","standard","setstandard","standardValid","setStandardValid","phone","setphone","phoneValid","setPhoneValid","password","setpassword","passwordValid","setPasswordValid","cnfpassword","setcnfpassword","cnfpasswordValid","setCnfPasswordValid","formValid","setFormValid","errorMessage","setErrorMessage","validateForm","updateName","data","errorMsg","length","updateEmail","test","updateStandard","updatePhone","updatePassword","updateCnfPassword","container","heading","form","form_group","label","form_field","e","target","value","phoneclass","form_group1","form_group2","btn"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport classes from './Login.module.css';\n\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n      return(\n        <div className={classes.error_msg}>\n            <p>{props.message}</p>\n        </div>\n      )\n    }\n    return null;\n  }\n\nconst SignUp = (props) => {\n    const [name,setname] = useState('');\n    const [nameValid,setNameValid] = useState(false);\n    const [email,setemail] = useState('');\n    const [emailValid,setEmailValid] = useState(false);\n    const [standard,setstandard] = useState('');\n    const [standardValid,setStandardValid] = useState(false);\n    const [phone,setphone] = useState('');\n    const [phoneValid,setPhoneValid] = useState(false);\n    const [password,setpassword] = useState('');\n    const [passwordValid,setPasswordValid] = useState(false);\n    const [cnfpassword,setcnfpassword] = useState('');\n    const [cnfpasswordValid,setCnfPasswordValid] = useState(false);\n    const [formValid,setFormValid] = useState(false);\n    const [errorMessage,setErrorMessage] = useState({});\n\n    const validateForm = ()=>{\n        setFormValid(nameValid && emailValid && standardValid && phoneValid && passwordValid && cnfpasswordValid);\n    }\n    const updateName = (data) => {\n        let errorMsg = {...errorMessage};\n        setname(data);\n        if(data.length > 0){\n            setNameValid(true);\n        }else{\n            setNameValid(false);\n            errorMsg.name = 'Name is required!';\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    }\n\n    const updateEmail = (data) => {\n        let errorMsg = {...errorMessage};\n        setemail(data);\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)){\n            setEmailValid(false);\n            errorMsg.email = 'Invalid email format';\n            setErrorMessage(errorMsg);\n        }else{\n            setEmailValid(true);\n        }\n        validateForm();\n    }\n\n    const updateStandard = (data) => {\n        let errorMsg = {...errorMessage};\n        setstandard(data);\n        if(data.length > 0){\n            setStandardValid(true);\n        }else{\n            setStandardValid(false);\n            errorMsg.standard = 'Class is required!';\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    }\n\n    const updatePhone = (data) => {\n        let errorMsg = {...errorMessage};\n        setphone(data);\n        if(data.length === 10){\n            setPhoneValid(true);\n        }else{\n            setPhoneValid(false);\n            errorMsg.phone = '10 digit phone number is required';\n            setErrorMessage(errorMsg);\n        }\n        validateForm();\n    }\n\n    const updatePassword = (data) => {\n        let errorMsg = {...errorMessage};\n        setpassword(data);\n        if(data.length === 0){\n            setPasswordValid(false);\n            errorMsg.password = 'Password is required';\n        }else if (data.length < 6){\n            setPasswordValid(false);\n            errorMsg.password = 'Password needs to be 6 characters or more';\n        }else{\n            setPasswordValid(true);\n            if(cnfpassword === password){\n                setCnfPasswordValid(true);\n            }\n        }\n        setErrorMessage(errorMsg);\n    }\n    const updateCnfPassword = (data) => {\n        let errorMsg = {...errorMessage};\n        setcnfpassword(data);\n        if(data.length === 0){\n            setCnfPasswordValid(false);\n            errorMsg.cnfpassword = 'Confirm Password is required';\n        }else if (data !== password) {\n            setCnfPasswordValid(false)\n            errorMsg.cnfpassword = 'Password Mismatch';\n        }else{\n            setCnfPasswordValid(true);\n        }\n        setErrorMessage(errorMsg);\n    }\n    return (\n        <div className={classes.container}>\n            <div className={classes.heading}>\n                <h2>Sign Up</h2>\n                <h4>Register as a </h4>\n            </div>\n            <form action='#' id='js-form' className={classes.form}>\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor='username'>Student Name</label>\n                    < ValidationMessage valid={nameValid} message={errorMessage.name} />\n                    <input type='text' id='username' name='username' className={classes.form_field}\n                    value={name} onChange={(e) => updateName(e.target.value)} placeholder='Enter student name'/>\n                </div>\n\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor='email'>Email</label>\n                    < ValidationMessage valid={emailValid} message={errorMessage.email} />\n                    <input type='email' id='email' name='email' className={classes.form_field}\n                    value={email} onChange={(e) => updateEmail(e.target.value)} placeholder='Enter email'/>\n                </div>\n\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor='CollageName'>Collage Name</label>\n                    < ValidationMessage valid={nameValid} message={errorMessage.name} />\n                    <input type='text' id='CollageName' name='CollageName' className={classes.form_field}\n                    value={name} onChange={(e) => updateName(e.target.value)} placeholder='Enter student name'/>\n                </div>\n\n                <div className={classes.phoneclass}>\n                    <div className={classes.form_group1}>\n                        <label className={classes.label} htmlFor='phone'>Roll Number</label>\n                        < ValidationMessage valid={phoneValid} message={errorMessage.phone} />\n                        <input type='phone' id='phone' name='phone' className={classes.form_field} \n                        value={phone} onChange={(e) => updatePhone(e.target.value)} placeholder='Enter Phone Number'/>\n                    </div>\n                    <div className={classes.form_group2}>\n                        <label className={classes.label} htmlFor='standard'>year</label>\n                        < ValidationMessage valid={standardValid} message={errorMessage.standard}/>\n                        <input type='text' id='standard' name='standard' className={classes.form_field}\n                        value={standard} onChange={(e) => updateStandard(e.target.value)} placeholder='class'/>\n                    </div>\n                </div>\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor='password'>Password</label>\n                    < ValidationMessage valid={passwordValid} message={errorMessage.password} />\n                    <input type='password' id='password' name='password' className={classes.form_field}\n                    value={password} onChange={(e) => updatePassword(e.target.value)} placeholder='Password'/>\n                </div>\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor='password'>Confirm Password</label>\n                    < ValidationMessage valid={cnfpasswordValid} message={errorMessage.cnfpassword}/>\n                    <input type='password' id='confirm_password' name='cnfpassword' className={classes.form_field}\n                    value={cnfpassword} onChange={(e) => updateCnfPassword(e.target.value)} placeholder='Confirm Password'/>\n                </div>\n                <div className='form-controls'>\n                    <button className={classes.btn} type='submit' disabled={!formValid}>Register</button>\n                </div>\n            </form>\n                \n        </div>\n    );\n}\n\nexport default SignUp;"]},"metadata":{},"sourceType":"module"}