{"ast":null,"code":"var _jsxFileName = \"/home/bhasker/Programming/Web Development/IIMS/src/components/Authentication/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValidationMessage(props) {\n  if (!props.valid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.error_msg,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n}\n\n_c = ValidationMessage;\n\nconst Login = props => {\n  _s();\n\n  const [email, setemail] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(false);\n  const [password, setpassword] = useState(\"\");\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n\n  const validateForm = () => {\n    setFormValid(emailValid && passwordValid);\n  };\n\n  const updateEmail = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setemail(data);\n\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      setEmailValid(false);\n      errorMsg.email = \"Invalid email format\";\n      setErrorMessage(errorMsg);\n    } else {\n      setEmailValid(true);\n    }\n\n    validateForm();\n  };\n\n  const updatePassword = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setpassword(data);\n\n    if (data.length === 0) {\n      setPasswordValid(false);\n      errorMsg.password = \"Password is required\";\n    } else if (data.length < 6) {\n      setPasswordValid(false);\n      errorMsg.password = \"Password needs to be 6 characters or more\";\n    } else {\n      setPasswordValid(true);\n    }\n\n    setErrorMessage(errorMsg);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.heading,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Welcome Back. SignIn and resume.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      id: \"js-form\",\n      className: classes.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: emailValid,\n          message: errorMessage.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          className: classes.form_field,\n          value: email,\n          onChange: e => updateEmail(e.target.value),\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: passwordValid,\n          message: errorMessage.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          className: classes.form_field,\n          value: password,\n          onChange: e => updatePassword(e.target.value),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.btn,\n          type: \"submit\",\n          disabled: !formValid,\n          children: \"Sign IN\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"2UTn7wnwdVmadr6BWtj/sJxXdT0=\");\n\n_c2 = Login;\nexport default Login;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValidationMessage\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["/home/bhasker/Programming/Web Development/IIMS/src/components/Authentication/Login.js"],"names":["React","useState","classes","ValidationMessage","props","valid","error_msg","message","Login","email","setemail","emailValid","setEmailValid","password","setpassword","passwordValid","setPasswordValid","formValid","setFormValid","errorMessage","setErrorMessage","validateForm","updateEmail","data","errorMsg","test","updatePassword","length","container","heading","form","form_group","label","form_field","e","target","value","btn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./Login.module.css\";\n\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n        return (\n            <div className={classes.error_msg}>\n                <p>{props.message}</p>\n            </div>\n        );\n    }\n    return null;\n}\n\nconst Login = (props) => {\n    const [email, setemail] = useState(\"\");\n    const [emailValid, setEmailValid] = useState(false);\n    const [password, setpassword] = useState(\"\");\n    const [passwordValid, setPasswordValid] = useState(false);\n    const [formValid, setFormValid] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({});\n\n    const validateForm = () => {\n        setFormValid(emailValid && passwordValid);\n    };\n\n    const updateEmail = (data) => {\n        let errorMsg = { ...errorMessage };\n        setemail(data);\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n            setEmailValid(false);\n            errorMsg.email = \"Invalid email format\";\n            setErrorMessage(errorMsg);\n        } else {\n            setEmailValid(true);\n        }\n        validateForm();\n    };\n\n    const updatePassword = (data) => {\n        let errorMsg = { ...errorMessage };\n        setpassword(data);\n        if (data.length === 0) {\n            setPasswordValid(false);\n            errorMsg.password = \"Password is required\";\n        } else if (data.length < 6) {\n            setPasswordValid(false);\n            errorMsg.password = \"Password needs to be 6 characters or more\";\n        } else {\n            setPasswordValid(true);\n        }\n        setErrorMessage(errorMsg);\n    };\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.heading}>\n                <h2>Sign In</h2>\n                <h4>Welcome Back. SignIn and resume.</h4>\n            </div>\n            <form action=\"#\" id=\"js-form\" className={classes.form}>\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"email\">\n                        Email\n                    </label>\n                    <ValidationMessage\n                        valid={emailValid}\n                        message={errorMessage.email}\n                    />\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        className={classes.form_field}\n                        value={email}\n                        onChange={(e) => updateEmail(e.target.value)}\n                        placeholder=\"Enter email\"\n                    />\n                </div>\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"password\">\n                        Password\n                    </label>\n                    <ValidationMessage\n                        valid={passwordValid}\n                        message={errorMessage.password}\n                    />\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        className={classes.form_field}\n                        value={password}\n                        onChange={(e) => updatePassword(e.target.value)}\n                        placeholder=\"Password\"\n                    />\n                </div>\n                <div className=\"form-controls\">\n                    <button\n                        className={classes.btn}\n                        type=\"submit\"\n                        disabled={!formValid}\n                    >\n                        Sign IN\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}