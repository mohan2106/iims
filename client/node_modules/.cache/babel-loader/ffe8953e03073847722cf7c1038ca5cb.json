{"ast":null,"code":"var _jsxFileName = \"/home/mohan/dev/react/iims/client/src/components/Authentication/Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport classes from \"./Login.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ValidationMessage(props) {\n  if (!props.valid) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.error_msg,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n}\n\n_c = ValidationMessage;\n\nconst SignUp = props => {\n  _s();\n\n  const [name, setname] = useState(\"\");\n  const [nameValid, setNameValid] = useState(false);\n  const [email, setemail] = useState(\"\");\n  const [emailValid, setEmailValid] = useState(false);\n  const [college, setcollege] = useState(\"\");\n  const [collegeValid, setCollegeValid] = useState(false);\n  const [rollno, setrollno] = useState(\"\");\n  const [rollnoValid, setRollnoValid] = useState(false);\n  const [password, setpassword] = useState(\"\");\n  const [passwordValid, setPasswordValid] = useState(false);\n  const [cnfpassword, setcnfpassword] = useState(\"\");\n  const [cnfpasswordValid, setCnfPasswordValid] = useState(false);\n  const [formValid, setFormValid] = useState(false);\n  const [errorMessage, setErrorMessage] = useState({});\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errorMsg = { ...errorMessage\n    };\n    validateForm();\n\n    if (formValid) {\n      try {\n        setLoading(true);\n      } catch {\n        setFormValid(false);\n        errorMsg.name = \"Faild to create an account\";\n        setErrorMessage(errorMsg);\n      }\n\n      setLoading(false);\n    } else {\n      setFormValid(false);\n      errorMsg.name = \"Form is invalid\";\n      setErrorMessage(errorMsg);\n    }\n  };\n\n  const validateForm = () => {\n    updateName(name);\n    updateEmail(email);\n    updateCollege(college);\n    updateRollno(rollno);\n    updatePassword(password);\n    updateCnfPassword(cnfpassword);\n\n    if (nameValid && emailValid && collegeValid && rollnoValid && passwordValid && cnfpasswordValid) {\n      console.log(\"x\");\n      setFormValid(true);\n      console.log(\"Form = \", formValid, nameValid && emailValid && collegeValid && rollnoValid && passwordValid && cnfpasswordValid);\n    } else {\n      console.log(\"y\");\n      setFormValid(false);\n    }\n  };\n\n  const updateName = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setname(data);\n\n    if (data.length > 0) {\n      setNameValid(true);\n    } else {\n      setNameValid(false);\n      errorMsg.name = \"Name is required!\";\n      setErrorMessage(errorMsg);\n    }\n\n    console.log(\"Name = \", nameValid);\n  };\n\n  const updateEmail = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setemail(data);\n\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      setEmailValid(false);\n      errorMsg.email = \"Invalid email format\";\n      setErrorMessage(errorMsg);\n    } else {\n      setEmailValid(true);\n    }\n\n    console.log(\"Email = \", emailValid);\n  };\n\n  const updateCollege = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setcollege(data);\n\n    if (data.length > 0) {\n      setCollegeValid(true);\n    } else {\n      setCollegeValid(false);\n      errorMsg.name = \"College Name is required!\";\n      setErrorMessage(errorMsg);\n    }\n\n    console.log(\"College = \", collegeValid);\n  };\n\n  const updateRollno = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setrollno(data);\n\n    if (data.length > 0) {\n      setRollnoValid(true);\n    } else {\n      setRollnoValid(false);\n      errorMsg.phone = \"Roll No is required\";\n      setErrorMessage(errorMsg);\n    }\n\n    console.log(\"Rollno = \", rollnoValid);\n  };\n\n  const updatePassword = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setpassword(data);\n\n    if (data.length === 0) {\n      setPasswordValid(false);\n      errorMsg.password = \"Password is required\";\n    } else if (data.length < 6) {\n      setPasswordValid(false);\n      errorMsg.password = \"Password needs to be 6 characters or more\";\n    } else {\n      setPasswordValid(true);\n\n      if (cnfpassword === password) {\n        setCnfPasswordValid(true);\n      }\n    }\n\n    setErrorMessage(errorMsg);\n    console.log(\"Password = \", passwordValid);\n  };\n\n  const updateCnfPassword = data => {\n    let errorMsg = { ...errorMessage\n    };\n    setcnfpassword(data);\n\n    if (data.length === 0) {\n      setCnfPasswordValid(false);\n      errorMsg.cnfpassword = \"Confirm Password is required\";\n    } else if (data !== password) {\n      setCnfPasswordValid(false);\n      errorMsg.cnfpassword = \"Password Mismatch\";\n    } else {\n      setCnfPasswordValid(true);\n    }\n\n    setErrorMessage(errorMsg);\n    console.log(\"Cnfpassword = \", cnfpasswordValid);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.heading,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Register as a participant to participate in Inter-IIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n      valid: formValid,\n      message: errorMessage.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"#\",\n      id: \"js-form\",\n      className: classes.form,\n      onSubmit: e => handleSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"username\",\n          children: \"Participant Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: nameValid,\n          message: errorMessage.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          className: classes.form_field,\n          value: name,\n          onChange: e => updateName(e.target.value),\n          placeholder: \"Enter participant name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: emailValid,\n          message: errorMessage.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          className: classes.form_field,\n          value: email,\n          onChange: e => updateEmail(e.target.value),\n          placeholder: \"Enter email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"collegeName\",\n          children: \"college Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: collegeValid,\n          message: errorMessage.college\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"collegeName\",\n          name: \"collegeName\",\n          className: classes.form_field,\n          value: college,\n          onChange: e => updateCollege(e.target.value),\n          placeholder: \"Enter college name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"rollno\",\n          children: \"Roll Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: rollnoValid,\n          message: errorMessage.rollno\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"rollno\",\n          name: \"rollno\",\n          className: classes.form_field,\n          value: rollno,\n          onChange: e => updateRollno(e.target.value),\n          placeholder: \"Enter Roll Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: passwordValid,\n          message: errorMessage.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          className: classes.form_field,\n          value: password,\n          onChange: e => updatePassword(e.target.value),\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.form_group,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: classes.label,\n          htmlFor: \"password\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ValidationMessage, {\n          valid: cnfpasswordValid,\n          message: errorMessage.cnfpassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirm_password\",\n          name: \"cnfpassword\",\n          className: classes.form_field,\n          value: cnfpassword,\n          onChange: e => updateCnfPassword(e.target.value),\n          placeholder: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.btn,\n          type: \"submit\",\n          disabled: loading,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUp, \"ZUyHgkSwMNiEPrLbk0rhNEwuwDE=\");\n\n_c2 = SignUp;\nexport default SignUp;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValidationMessage\");\n$RefreshReg$(_c2, \"SignUp\");","map":{"version":3,"sources":["/home/mohan/dev/react/iims/client/src/components/Authentication/Signup.js"],"names":["React","useState","classes","ValidationMessage","props","valid","error_msg","message","SignUp","name","setname","nameValid","setNameValid","email","setemail","emailValid","setEmailValid","college","setcollege","collegeValid","setCollegeValid","rollno","setrollno","rollnoValid","setRollnoValid","password","setpassword","passwordValid","setPasswordValid","cnfpassword","setcnfpassword","cnfpasswordValid","setCnfPasswordValid","formValid","setFormValid","errorMessage","setErrorMessage","loading","setLoading","handleSubmit","e","preventDefault","errorMsg","validateForm","updateName","updateEmail","updateCollege","updateRollno","updatePassword","updateCnfPassword","console","log","data","length","test","phone","container","heading","form","form_group","label","form_field","target","value","btn"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classes from \"./Login.module.css\";\nfunction ValidationMessage(props) {\n    if (!props.valid) {\n        return (\n            <div className={classes.error_msg}>\n                <p>{props.message}</p>\n            </div>\n        );\n    }\n    return null;\n}\n\nconst SignUp = (props) => {\n    const [name, setname] = useState(\"\");\n    const [nameValid, setNameValid] = useState(false);\n    const [email, setemail] = useState(\"\");\n    const [emailValid, setEmailValid] = useState(false);\n    const [college, setcollege] = useState(\"\");\n    const [collegeValid, setCollegeValid] = useState(false);\n    const [rollno, setrollno] = useState(\"\");\n    const [rollnoValid, setRollnoValid] = useState(false);\n    const [password, setpassword] = useState(\"\");\n    const [passwordValid, setPasswordValid] = useState(false);\n    const [cnfpassword, setcnfpassword] = useState(\"\");\n    const [cnfpasswordValid, setCnfPasswordValid] = useState(false);\n    const [formValid, setFormValid] = useState(false);\n    const [errorMessage, setErrorMessage] = useState({});\n    const [loading, setLoading] = useState(false);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        let errorMsg = { ...errorMessage };\n        validateForm();\n        if (formValid) {\n            try {\n                setLoading(true);\n            } catch {\n                setFormValid(false);\n                errorMsg.name = \"Faild to create an account\";\n                setErrorMessage(errorMsg);\n            }\n            setLoading(false);\n        } else {\n            setFormValid(false);\n            errorMsg.name = \"Form is invalid\";\n            setErrorMessage(errorMsg);\n        }\n    };\n\n    const validateForm = () => {\n        updateName(name);\n        updateEmail(email);\n        updateCollege(college);\n        updateRollno(rollno);\n        updatePassword(password);\n        updateCnfPassword(cnfpassword);\n        if (\n            nameValid &&\n            emailValid &&\n            collegeValid &&\n            rollnoValid &&\n            passwordValid &&\n            cnfpasswordValid\n        ) {\n            console.log(\"x\");\n            setFormValid(true);\n            console.log(\n                \"Form = \",\n                formValid,\n                nameValid &&\n                    emailValid &&\n                    collegeValid &&\n                    rollnoValid &&\n                    passwordValid &&\n                    cnfpasswordValid\n            );\n        } else {\n            console.log(\"y\");\n            setFormValid(false);\n        }\n    };\n    const updateName = (data) => {\n        let errorMsg = { ...errorMessage };\n        setname(data);\n        if (data.length > 0) {\n            setNameValid(true);\n        } else {\n            setNameValid(false);\n            errorMsg.name = \"Name is required!\";\n            setErrorMessage(errorMsg);\n        }\n        console.log(\"Name = \", nameValid);\n    };\n\n    const updateEmail = (data) => {\n        let errorMsg = { ...errorMessage };\n        setemail(data);\n        if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n            setEmailValid(false);\n            errorMsg.email = \"Invalid email format\";\n            setErrorMessage(errorMsg);\n        } else {\n            setEmailValid(true);\n        }\n        console.log(\"Email = \", emailValid);\n    };\n\n    const updateCollege = (data) => {\n        let errorMsg = { ...errorMessage };\n        setcollege(data);\n        if (data.length > 0) {\n            setCollegeValid(true);\n        } else {\n            setCollegeValid(false);\n            errorMsg.name = \"College Name is required!\";\n            setErrorMessage(errorMsg);\n        }\n        console.log(\"College = \", collegeValid);\n    };\n\n    const updateRollno = (data) => {\n        let errorMsg = { ...errorMessage };\n        setrollno(data);\n        if (data.length > 0) {\n            setRollnoValid(true);\n        } else {\n            setRollnoValid(false);\n            errorMsg.phone = \"Roll No is required\";\n            setErrorMessage(errorMsg);\n        }\n        console.log(\"Rollno = \", rollnoValid);\n    };\n\n    const updatePassword = (data) => {\n        let errorMsg = { ...errorMessage };\n        setpassword(data);\n        if (data.length === 0) {\n            setPasswordValid(false);\n            errorMsg.password = \"Password is required\";\n        } else if (data.length < 6) {\n            setPasswordValid(false);\n            errorMsg.password = \"Password needs to be 6 characters or more\";\n        } else {\n            setPasswordValid(true);\n            if (cnfpassword === password) {\n                setCnfPasswordValid(true);\n            }\n        }\n        setErrorMessage(errorMsg);\n        console.log(\"Password = \", passwordValid);\n    };\n    const updateCnfPassword = (data) => {\n        let errorMsg = { ...errorMessage };\n        setcnfpassword(data);\n        if (data.length === 0) {\n            setCnfPasswordValid(false);\n            errorMsg.cnfpassword = \"Confirm Password is required\";\n        } else if (data !== password) {\n            setCnfPasswordValid(false);\n            errorMsg.cnfpassword = \"Password Mismatch\";\n        } else {\n            setCnfPasswordValid(true);\n        }\n        setErrorMessage(errorMsg);\n        console.log(\"Cnfpassword = \", cnfpasswordValid);\n    };\n    return (\n        <div className={classes.container}>\n            {/* Form Heading */}\n            <div className={classes.heading}>\n                <h2>Sign Up</h2>\n                <h4>Register as a participant to participate in Inter-IIT</h4>\n            </div>\n            <ValidationMessage valid={formValid} message={errorMessage.name} />\n            <form\n                action=\"#\"\n                id=\"js-form\"\n                className={classes.form}\n                onSubmit={(e) => handleSubmit(e)}\n            >\n                {/* Participant Name field */}\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"username\">\n                        Participant Name\n                    </label>\n                    <ValidationMessage\n                        valid={nameValid}\n                        message={errorMessage.name}\n                    />\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        name=\"username\"\n                        className={classes.form_field}\n                        value={name}\n                        onChange={(e) => updateName(e.target.value)}\n                        placeholder=\"Enter participant name\"\n                    />\n                </div>\n                {/* Email field */}\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"email\">\n                        Email\n                    </label>\n                    <ValidationMessage\n                        valid={emailValid}\n                        message={errorMessage.email}\n                    />\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        name=\"email\"\n                        className={classes.form_field}\n                        value={email}\n                        onChange={(e) => updateEmail(e.target.value)}\n                        placeholder=\"Enter email\"\n                    />\n                </div>\n                {/* College Name field */}\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"collegeName\">\n                        college Name\n                    </label>\n                    <ValidationMessage\n                        valid={collegeValid}\n                        message={errorMessage.college}\n                    />\n                    <input\n                        type=\"text\"\n                        id=\"collegeName\"\n                        name=\"collegeName\"\n                        className={classes.form_field}\n                        value={college}\n                        onChange={(e) => updateCollege(e.target.value)}\n                        placeholder=\"Enter college name\"\n                    />\n                </div>\n                {/* Roll No field */}\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"rollno\">\n                        Roll Number\n                    </label>\n                    <ValidationMessage\n                        valid={rollnoValid}\n                        message={errorMessage.rollno}\n                    />\n                    <input\n                        type=\"number\"\n                        id=\"rollno\"\n                        name=\"rollno\"\n                        className={classes.form_field}\n                        value={rollno}\n                        onChange={(e) => updateRollno(e.target.value)}\n                        placeholder=\"Enter Roll Number\"\n                    />\n                </div>\n                {/* Password */}\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"password\">\n                        Password\n                    </label>\n                    <ValidationMessage\n                        valid={passwordValid}\n                        message={errorMessage.password}\n                    />\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        name=\"password\"\n                        className={classes.form_field}\n                        value={password}\n                        onChange={(e) => updatePassword(e.target.value)}\n                        placeholder=\"Password\"\n                    />\n                </div>\n                {/* Confirm Password */}\n                <div className={classes.form_group}>\n                    <label className={classes.label} htmlFor=\"password\">\n                        Confirm Password\n                    </label>\n                    <ValidationMessage\n                        valid={cnfpasswordValid}\n                        message={errorMessage.cnfpassword}\n                    />\n                    <input\n                        type=\"password\"\n                        id=\"confirm_password\"\n                        name=\"cnfpassword\"\n                        className={classes.form_field}\n                        value={cnfpassword}\n                        onChange={(e) => updateCnfPassword(e.target.value)}\n                        placeholder=\"Confirm Password\"\n                    />\n                </div>\n                {/* Submit */}\n                <div className=\"form-controls\">\n                    <button\n                        className={classes.btn}\n                        type=\"submit\"\n                        disabled={loading}\n                    >\n                        Register\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default SignUp;\n"]},"metadata":{},"sourceType":"module"}