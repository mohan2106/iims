{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nconst app = firebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n});\nexport const auth = firebase.auth();\nexport const firestore = app.firestore();\nexport const generateUserDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`users/${user.uid}`);\n  const snapshot = await userRef.get();\n\n  if (!snapshot.exists) {\n    const {\n      name,\n      email,\n      rollno\n    } = user;\n\n    try {\n      await userRef.set({\n        name,\n        email,\n        rollno,\n        ...additionalData\n      });\n    } catch (error) {\n      console.error(\"Error creating user document\", error);\n    }\n  }\n\n  return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async uid => {\n  if (!uid) return null;\n\n  try {\n    const userDocument = await firestore.doc(`users/${uid}`).get();\n    return {\n      uid,\n      ...userDocument.data()\n    };\n  } catch (error) {\n    console.error(\"Error fetching user\", error);\n  }\n};\n\nexport default app;","map":{"version":3,"sources":["/home/bhasker/Programming/Web Development/IIMS/src/firebase.js"],"names":["firebase","app","initializeApp","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","projectId","REACT_APP_FIREBASE_PROJECT_ID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APP_ID","auth","firestore","generateUserDocument","user","additionalData","userRef","doc","uid","snapshot","get","exists","name","email","rollno","set","error","console","getUserDocument","userDocument","data"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,eAAP;AAEA,MAAMC,GAAG,GAAGD,QAAQ,CAACE,aAAT,CAAuB;AAC/BC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADW;AAE/BC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFO;AAG/BC,EAAAA,SAAS,EAAEL,OAAO,CAACC,GAAR,CAAYK,6BAHQ;AAI/BC,EAAAA,aAAa,EAAEP,OAAO,CAACC,GAAR,CAAYO,iCAJI;AAK/BC,EAAAA,iBAAiB,EAAET,OAAO,CAACC,GAAR,CAAYS,sCALA;AAM/BC,EAAAA,KAAK,EAAEX,OAAO,CAACC,GAAR,CAAYW;AANY,CAAvB,CAAZ;AASA,OAAO,MAAMC,IAAI,GAAGjB,QAAQ,CAACiB,IAAT,EAAb;AACP,OAAO,MAAMC,SAAS,GAAGjB,GAAG,CAACiB,SAAJ,EAAlB;AAEP,OAAO,MAAMC,oBAAoB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AAChE,MAAI,CAACD,IAAL,EAAW;AACX,QAAME,OAAO,GAAGJ,SAAS,CAACK,GAAV,CAAe,SAAQH,IAAI,CAACI,GAAI,EAAhC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMH,OAAO,CAACI,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,QAA0BV,IAAhC;;AACA,QAAI;AACA,YAAME,OAAO,CAACS,GAAR,CAAY;AACdH,QAAAA,IADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,MAHc;AAId,WAAGT;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOW,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAc,8BAAd,EAA8CA,KAA9C;AACH;AACJ;;AACD,SAAOE,eAAe,CAACd,IAAI,CAACI,GAAN,CAAtB;AACH,CAlBM;;AAoBP,MAAMU,eAAe,GAAG,MAAOV,GAAP,IAAe;AACnC,MAAI,CAACA,GAAL,EAAU,OAAO,IAAP;;AACV,MAAI;AACA,UAAMW,YAAY,GAAG,MAAMjB,SAAS,CAACK,GAAV,CAAe,SAAQC,GAAI,EAA3B,EAA8BE,GAA9B,EAA3B;AACA,WAAO;AACHF,MAAAA,GADG;AAEH,SAAGW,YAAY,CAACC,IAAb;AAFA,KAAP;AAIH,GAND,CAME,OAAOJ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACD,KAAR,CAAc,qBAAd,EAAqCA,KAArC;AACH;AACJ,CAXD;;AAaA,eAAe/B,GAAf","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n});\n\nexport const auth = firebase.auth();\nexport const firestore = app.firestore();\n\nexport const generateUserDocument = async (user, additionalData) => {\n    if (!user) return;\n    const userRef = firestore.doc(`users/${user.uid}`);\n    const snapshot = await userRef.get();\n    if (!snapshot.exists) {\n        const { name, email, rollno } = user;\n        try {\n            await userRef.set({\n                name,\n                email,\n                rollno,\n                ...additionalData,\n            });\n        } catch (error) {\n            console.error(\"Error creating user document\", error);\n        }\n    }\n    return getUserDocument(user.uid);\n};\n\nconst getUserDocument = async (uid) => {\n    if (!uid) return null;\n    try {\n        const userDocument = await firestore.doc(`users/${uid}`).get();\n        return {\n            uid,\n            ...userDocument.data(),\n        };\n    } catch (error) {\n        console.error(\"Error fetching user\", error);\n    }\n};\n\nexport default app;\n"]},"metadata":{},"sourceType":"module"}